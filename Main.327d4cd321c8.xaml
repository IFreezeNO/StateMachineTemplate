<Activity mc:Ignorable="sap sap2010" x:Class="Generated" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sg="clr-namespace:System.Globalization;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="55">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>OT_Library</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Net</x:String>
      <x:String>Microsoft.Activities</x:String>
      <x:String>Microsoft.Activities.Messaging</x:String>
      <x:String>Microsoft.Activities.Beta2</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="42">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>OT_Library</AssemblyReference>
      <AssemblyReference>OT_Library_Expressions_30058349</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Generated">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="imageCounterTwo" />
      <Variable x:TypeArguments="x:Int32" Name="imageCounter" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_FakturaType" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_faktura" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="ExtractDataTable" />
      <Variable x:TypeArguments="x:String" Name="output_faktura" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_alleFaktura" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="ListFaktura" />
      <Variable x:TypeArguments="s:Exception" Name="TechnicalException" />
      <Variable x:TypeArguments="ui:QueueItem" Name="transactionItem" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_GrunnlagsdataExsits" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_ShouldStop" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_prod" />
      <Variable x:TypeArguments="x:Int32" Name="int_ExceptionCounter" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessException" />
      <Variable x:TypeArguments="sg:CultureInfo" Name="ci" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_loggingDT" />
      <Variable x:TypeArguments="x:String" Name="assets_url" />
      <Variable x:TypeArguments="x:String" Name="AC_Url" />
      <Variable x:TypeArguments="x:String" Name="filsti" />
      <Variable x:TypeArguments="sd:DataRow" Name="CurrentRow" />
    </Sequence.Variables>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_faktura]" DisplayName="fetch data and insert into csv with For Each" sap:VirtualizedContainerService.HintSize="874,2987.33333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="840,2868.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_48">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Object" Name="AllFaktura" />
              <Variable x:TypeArguments="x:String" Name="outputAlleFaktura" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="798,62" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[imageCounterTwo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[imageCounterTwo + 1]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:StartProcess WorkingDirectory="{x:Null}" Arguments="[Filsti+imageCounterTwo.ToString +&quot;_tempImage&quot;+&quot;.jpg&quot;]" DisplayName="Open the image " FileName="explorer.exe" sap:VirtualizedContainerService.HintSize="798,86.6666666666667" sap2010:WorkflowViewState.IdRef="StartProcess_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:StartProcess>
            <ui:OCRTextExists DisplayName="OCR Text Exists 'egendefinert  D2DImageC...'" sap:VirtualizedContainerService.HintSize="798,222.666666666667" sap2010:WorkflowViewState.IdRef="OCRTextExists_2" Occurrence="1" Result="[bool_FakturaType]" Text="Powered by invoicely.com">
              <ui:OCRTextExists.OCREngine>
                <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                  <ActivityFunc.Argument>
                    <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                  </ActivityFunc.Argument>
                  <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_1" Image="[Image]" />
                </ActivityFunc>
              </ui:OCRTextExists.OCREngine>
              <ui:OCRTextExists.Target>
                <ui:Target Element="{x:Null}" Id="2682629b-60ff-4c62-84e4-3e6e0e9fbd74" InformativeScreenshot="2549c5d183d2e9abb308dff6d8609b8b" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_*' title='*_tempImage.jpg ‎- Bilder' /&gt;&lt;uia automationid='D2DImageControl' role='egendefinert' /&gt;">
                  <ui:Target.ClippingRegion>
                    <ui:Region Rectangle="152, 418, 134, 40" />
                  </ui:Target.ClippingRegion>
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:OCRTextExists.Target>
            </ui:OCRTextExists>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="798,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[bool_FakturaType.ToString]" />
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="798,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="[CurrentRow(&quot;ID&quot;).ToString + &quot; &quot; + CurrentRow(&quot;Due Date&quot;).ToString]" />
            <ui:BuildDataTable DataTable="[dt_alleFaktura]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="798,58.6666666666667" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;ID&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;DueDate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InvoiceNo&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;CompanyName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TotalDue&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
            <Assign sap:VirtualizedContainerService.HintSize="798,62" sap2010:WorkflowViewState.IdRef="Assign_18">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[ListFaktura]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
              </Assign.Value>
            </Assign>
            <p:BuildCollection x:TypeArguments="x:String" DisplayName="Build collection" sap:VirtualizedContainerService.HintSize="798,22" sap2010:WorkflowViewState.IdRef="BuildCollection`1_2" />
            <If Condition="[bool_FakturaType]" sap:VirtualizedContainerService.HintSize="798,1398.66666666667" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,1234.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_49">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="companyNameInvoicely" />
                    <Variable x:TypeArguments="x:String" Name="InvoiceDateInvoicely" />
                    <Variable x:TypeArguments="x:String" Name="InvoiceTypeInvoicely" />
                    <Variable x:TypeArguments="x:String" Name="InvoiceTotalInvoicely" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="Powered by invoicely.com" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'Invoice' from invoicely" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_4">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_2" Image="[Image]" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="37c01972-9142-4263-af18-10d7873a7fbe" InformativeScreenshot="f9ddff1e07c7e37ee4d4bb8398cf73f3" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_*' title='*_*.jpg ‎- Bilder' /&gt;&lt;uia automationid='D2DImageControl' role='egendefinert' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="380, 66, 34, 17" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[InvoiceTypeInvoicely]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <AddToCollection x:TypeArguments="x:String" Collection="[ListFaktura]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[InvoiceTypeInvoicely]" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'Invoice date' from invoicely" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_5">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_3" Image="[Image]" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="37c01972-9142-4263-af18-10d7873a7fbe" InformativeScreenshot="9331a6785e04b65cc4ea372f3ee3c868" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_*' title='*_*.jpg ‎- Bilder' /&gt;&lt;uia automationid='D2DImageControl' role='egendefinert' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="367, 56, 54, 17" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[InvoiceDateInvoicely]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <AddToCollection x:TypeArguments="x:String" Collection="[ListFaktura]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[InvoiceDateInvoicely]" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'Company name' from invoicely" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_6">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_4" Image="[Image]" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="37c01972-9142-4263-af18-10d7873a7fbe" InformativeScreenshot="e797dbf126a0894dbd338c49e499dda8" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_*' title='*_*.jpg ‎- Bilder' /&gt;&lt;uia automationid='D2DImageControl' role='egendefinert' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="28, 26, 85, 31" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[companyNameInvoicely]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <AddToCollection x:TypeArguments="x:String" Collection="[ListFaktura]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[companyNameInvoicely]" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'Total due' from invoicely" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_7">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_5" Image="[Image]" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="37c01972-9142-4263-af18-10d7873a7fbe" InformativeScreenshot="7c18476af955571a6e627be0855cbb8d" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_*' title='*_*.jpg ‎- Bilder' /&gt;&lt;uia automationid='D2DImageControl' role='egendefinert' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="357, 373, 32, 14" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[InvoiceTotalInvoicely]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <AddToCollection x:TypeArguments="x:String" Collection="[ListFaktura]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[InvoiceTotalInvoicely]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,986.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_50">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="InvoiceTypeInvoicely" />
                    <Variable x:TypeArguments="x:String" Name="InvoiceType" />
                    <Variable x:TypeArguments="x:String" Name="InvoiceDate" />
                    <Variable x:TypeArguments="x:String" Name="CompanyName" />
                    <Variable x:TypeArguments="x:String" Name="Totaldue" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="Ikke powered by invoicely.com" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'Invoice' " sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_8">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_6" Image="[Image]" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="37c01972-9142-4263-af18-10d7873a7fbe" InformativeScreenshot="b45b2847388004a3d3bc0a2bf4564fb5" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_*' title='*_*.jpg ‎- Bilder' /&gt;&lt;uia automationid='D2DImageControl' role='egendefinert' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="412, 48, 56, 16" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[InvoiceType]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'Invoice date' " sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_9">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_7" Image="[Image]" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="37c01972-9142-4263-af18-10d7873a7fbe" InformativeScreenshot="b2ec842b998ca579836757c5aca33848" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_*' title='*_*.jpg ‎- Bilder' /&gt;&lt;uia automationid='D2DImageControl' role='egendefinert' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="392, 90, 58, 10" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[InvoiceDate]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'Company name' " sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_10">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_8" Image="[Image]" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="37c01972-9142-4263-af18-10d7873a7fbe" InformativeScreenshot="06472e739098aabc973ea9adca667b79" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_*' title='*_*.jpg ‎- Bilder' /&gt;&lt;uia automationid='D2DImageControl' role='egendefinert' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="33, 104, 64, 17" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[CompanyName]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'Total due' " sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_11">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_9" Image="[Image]" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="37c01972-9142-4263-af18-10d7873a7fbe" InformativeScreenshot="9dfa16a89df1ba641e38ce28e1ec6caf" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='1_tempImage.jpg ‎- Bilder' /&gt;&lt;uia automationid='D2DImageControl' role='egendefinert' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="424, 110, 30, 16" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[Totaldue]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                </Sequence>
              </If.Else>
            </If>
            <ui:OutputDataTable DataTable="[dt_alleFaktura]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="798,80.6666666666667" sap2010:WorkflowViewState.IdRef="OutputDataTable_2" Text="[outputAlleFaktura]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:OutputDataTable>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="798,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="[outputAlleFaktura.ToString]" />
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey 'vindu  Bilder'" sap:VirtualizedContainerService.HintSize="798,155.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="w" KeyModifiers="Ctrl">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cd443a30-ba3e-4bbd-9f8f-28d3c9a03a5f" InformativeScreenshot="03e39ea6bcdcde82bb52a7391e4d9405" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos*' title='*_*.jpg ‎- Bilder' /&gt;&lt;uia cls='Windows.UI.Core.CoreWindow' name='Bilder' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <DynamicActivity Name="{x:Null}" />
  </Sequence>
</Activity>